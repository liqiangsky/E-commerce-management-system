{"remainingRequest":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\我的git\\E-commerce-management-system\\dianshangsystem\\src\\components\\Params.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\src\\components\\Params.vue","mtime":1609319795256},{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\我的git\\E-commerce-management-system\\dianshangsystem\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5lbC10YWcgKyAuZWwtdGFnIHsNCiAgbWFyZ2luLWxlZnQ6IDEwcHg7DQp9DQouYnV0dG9uLW5ldy10YWcgew0KICBtYXJnaW4tbGVmdDogMTBweDsNCiAgaGVpZ2h0OiAzMnB4Ow0KICBsaW5lLWhlaWdodDogMzBweDsNCiAgcGFkZGluZy10b3A6IDA7DQogIHBhZGRpbmctYm90dG9tOiAwOw0KfQ0KLmlucHV0LW5ldy10YWcgew0KICB3aWR0aDogMTUwcHggIWltcG9ydGFudDsNCiAgbWFyZ2luLWxlZnQ6IDEwcHg7DQogIHZlcnRpY2FsLWFsaWduOiBib3R0b207DQp9DQo="},{"version":3,"sources":["Params.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Params.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"params\">\r\n    <el-breadcrumb separator=\"/\">\r\n      <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数列表</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <el-card class=\"m-t-20\">\r\n      <el-alert\r\n        title=\"注意：只允许为第三级分类设置相关参数\"\r\n        type=\"warning\"\r\n        show-icon\r\n      >\r\n      </el-alert>\r\n      <el-form ref=\"ParamsForm\" :model=\"ParamsForm\" class=\"m-t-20\">\r\n        <el-form-item label=\"选择商品分类:\">\r\n          <el-cascader\r\n            v-model=\"ParamsForm.goods_cat\"\r\n            :options=\"options\"\r\n            :props=\"props\"\r\n            @change=\"handleChange\"\r\n          ></el-cascader>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-tabs v-model=\"active\" :before-leave=\"handleLeave\">\r\n        <el-tab-pane label=\"动态参数\" name=\"0\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"Goods_cat.length !== 3\"\r\n            @click=\"Add('many')\"\r\n            >添加参数</el-button\r\n          >\r\n          <el-table\r\n            :data=\"tableData\"\r\n            v-loading=\"loading\"\r\n            border\r\n            style=\"width: 100%\"\r\n            class=\"m-t-20\"\r\n          >\r\n            <el-table-column width=\"50\" type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag\r\n                  class=\"m-10\"\r\n                  v-for=\"(tag, index) in scope.row.attr_vals\"\r\n                  :key=\"tag + index + Math.random()\"\r\n                  closable\r\n                  :disable-transitions=\"true\"\r\n                  @close=\"handleClose(scope.row, tag)\"\r\n                >\r\n                  {{ tag }}\r\n                </el-tag>\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n              label=\"#\"\r\n              width=\"50\"\r\n              type=\"index\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"参数名称\" prop=\"attr_name\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  size=\"mini\"\r\n                  @click=\"Edit(scope.row, sel)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  size=\"mini\"\r\n                  @click=\"Delete(scope.row)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态参数\" name=\"1\">\r\n          <el-button\r\n            type=\"primary\"\r\n            size=\"mini\"\r\n            :disabled=\"Goods_cat.length !== 3\"\r\n            @click=\"Add('only')\"\r\n            >添加参数</el-button\r\n          >\r\n          <el-table\r\n            :data=\"tableData\"\r\n            v-loading=\"loading\"\r\n            border\r\n            style=\"width: 100%\"\r\n            class=\"m-t-20\"\r\n          >\r\n            <el-table-column width=\"50\" type=\"expand\">\r\n              <template slot-scope=\"scope\">\r\n                <el-tag\r\n                  class=\"m-10\"\r\n                  v-for=\"(tag, index) in scope.row.attr_vals\"\r\n                  :key=\"tag + index + Math.random()\"\r\n                  closable\r\n                  :disable-transitions=\"true\"\r\n                  @close=\"handleClose(scope.row, tag)\"\r\n                >\r\n                  {{ tag }}\r\n                </el-tag>\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n              label=\"#\"\r\n              width=\"50\"\r\n              type=\"index\"\r\n            ></el-table-column>\r\n            <el-table-column label=\"属性名称\" prop=\"attr_name\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  size=\"mini\"\r\n                  @click=\"Edit(scope.row, sel)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  size=\"mini\"\r\n                  @click=\"Delete(scope.row)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n      <el-dialog\r\n        :title=\"title\"\r\n        :visible.sync=\"dialogVisible\"\r\n        width=\"50%\"\r\n        :destroy-on-close=\"true\"\r\n      >\r\n        <el-form\r\n          ref=\"ParameterForm\"\r\n          :model=\"ParameterForm\"\r\n          :rules=\"rules\"\r\n          label-width=\"80px\"\r\n        >\r\n          <el-form-item :label=\"label\" prop=\"attr_name\">\r\n            <el-input v-model=\"ParameterForm.attr_name\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"SubmitForm('ParameterForm')\"\r\n            >确 定</el-button\r\n          >\r\n        </span>\r\n      </el-dialog>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      title: \"\",\r\n      label: \"\",\r\n      ParameterForm: {\r\n        attr_name: \"\",\r\n        attr_sel: \"\",\r\n        attr_vals: \"\",\r\n      },\r\n      attr_id: 0,\r\n      ParamsForm: {\r\n        goods_cat: [],\r\n      },\r\n      type: \"\",\r\n      message: \"\",\r\n      options: [],\r\n      props: {\r\n        expandTrigger: \"hover\",\r\n        label: \"cat_name\",\r\n        value: \"cat_id\",\r\n        children: \"children\",\r\n      },\r\n      Goods_cat: [],\r\n      active: \"0\",\r\n      loading: false,\r\n      tableData: [],\r\n      sel: \"many\",\r\n      rules: {\r\n        attr_name: [\r\n          { required: true, message: \"此选项不能为空！\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n      mode: \"\",\r\n    };\r\n  },\r\n  created() {\r\n    this.Goods();\r\n  },\r\n  methods: {\r\n    //所有商品分类\r\n    async Goods() {\r\n      const res = await this.$http.get(\"categories\");\r\n      if (res.meta.status == 200) {\r\n        this.options = res.data;\r\n        this.type = \"success\";\r\n        this.message = \"获取商品分类成功！\";\r\n      } else {\r\n        this.type = \"error\";\r\n        this.message = \"获取商品分类失败！\";\r\n      }\r\n      this.$message({\r\n        type: this.type,\r\n        message: this.message,\r\n      });\r\n    },\r\n    //切换分类\r\n    handleChange(value) {\r\n      this.Goods_cat = value;\r\n      this.attr_vals();\r\n    },\r\n    //切换静态动态参数类型\r\n    handleLeave(activeName, oldActiveName) {\r\n      switch (+activeName) {\r\n        case 0:\r\n          this.sel = \"many\";\r\n          break;\r\n        case 1:\r\n          this.sel = \"only\";\r\n          break;\r\n      }\r\n      if (this.Goods_cat.length === 3) {\r\n        this.attr_vals();\r\n      }\r\n    },\r\n    //参数列表\r\n    async attr_vals() {\r\n      const res = await this.$http.get(`categories/${this.cateid}/attributes`, {\r\n        params: {\r\n          sel: this.sel,\r\n        },\r\n      });\r\n      if (res.meta.status == 200) {\r\n        res.data.forEach((item) => {\r\n          item.inputVisible = false;\r\n          item.inputValue = \"\";\r\n          item.attr_vals =\r\n            item.attr_vals !== \"\" ? item.attr_vals.split(\" \") : [];\r\n        });\r\n        this.tableData = res.data;\r\n        this.type = \"success\";\r\n        this.message = \"获取参数列表成功！\";\r\n      } else {\r\n        this.type = \"error\";\r\n        this.message = \"获取参数列表失败！\";\r\n      }\r\n      this.$message({\r\n        type: this.type,\r\n        message: this.message,\r\n      });\r\n    },\r\n    //新增\r\n    Add(sel) {\r\n      this.dialogVisible = true;\r\n      this.ParameterForm.attr_name = \"\";\r\n      this.mode = \"post\";\r\n      switch (sel) {\r\n        case \"many\":\r\n          this.title = \"添加动态参数\";\r\n          this.label = \"动态参数\";\r\n          break;\r\n        case \"only\":\r\n          this.title = \"添加静态属性\";\r\n          this.label = \"静态属性\";\r\n          break;\r\n      }\r\n    },\r\n    //编辑\r\n    Edit(row, sel) {\r\n      this.dialogVisible = true;\r\n      this.mode = \"put\";\r\n      switch (sel) {\r\n        case \"many\":\r\n          this.title = \"修改动态参数\";\r\n          this.label = \"动态参数\";\r\n          this.sel = sel;\r\n          break;\r\n        case \"only\":\r\n          this.title = \"修改静态属性\";\r\n          this.label = \"静态属性\";\r\n          this.sel = sel;\r\n          break;\r\n      }\r\n      this.attr_id = row.attr_id;\r\n      this.ParameterForm.attr_sel = sel;\r\n      this.ParameterForm.attr_vals = row.attr_vals;\r\n      this.ParameterForm.attr_name = row.attr_name;\r\n    },\r\n    //提交\r\n    SubmitForm(formName) {\r\n      this.$refs[formName].validate(async (valid) => {\r\n        if (valid) {\r\n          switch (this.mode) {\r\n            case \"put\":\r\n              const res = await this.$http.put(\r\n                `categories/${this.cateid}/attributes/${this.attr_id}`,\r\n                this.ParameterForm\r\n              );\r\n              if (res.meta.status == 200) {\r\n                this.type = \"success\";\r\n                switch (this.sel) {\r\n                  case \"many\":\r\n                    this.message = \"修改动态参数成功！\";\r\n                    break;\r\n                  case \"only\":\r\n                    this.message = \"修改静态参数成功！\";\r\n                    break;\r\n                }\r\n                const i = this.tableData.find((item) => {\r\n                  return item.attr_id === res.data.attr_id;\r\n                });\r\n                i.attr_name = res.data.attr_name;\r\n                this.dialogVisible = false;\r\n              } else {\r\n                this.type = \"error\";\r\n                switch (this.sel) {\r\n                  case \"many\":\r\n                    this.message = \"修改动态参数失败！\";\r\n                    break;\r\n                  case \"only\":\r\n                    this.message = \"修改静态参数失败！\";\r\n                    break;\r\n                }\r\n              }\r\n              break;\r\n            case \"post\":\r\n              const res1 = await this.$http.post(\r\n                `categories/${this.cateid}/attributes`,\r\n                {\r\n                  attr_name: this.ParameterForm.attr_name,\r\n                  attr_sel: this.sel,\r\n                }\r\n              );\r\n              if (res1.meta.status == 201) {\r\n                this.type = \"success\";\r\n                switch (this.sel) {\r\n                  case \"many\":\r\n                    this.message = \"添加动态参数成功！\";\r\n                    break;\r\n                  case \"only\":\r\n                    this.message = \"添加静态参数成功！\";\r\n                    break;\r\n                }\r\n                this.tableData.push(res1.data);\r\n                this.dialogVisible = false;\r\n              } else {\r\n                this.type = \"error\";\r\n                switch (this.sel) {\r\n                  case \"many\":\r\n                    this.message = \"添加动态参数失败！\";\r\n                    break;\r\n                  case \"only\":\r\n                    this.message = \"添加静态参数失败！\";\r\n                    break;\r\n                }\r\n              }\r\n          }\r\n        } else {\r\n          this.type = \"error\";\r\n          this.message = \"error\";\r\n        }\r\n        this.$message({\r\n          type: this.type,\r\n          message: this.message,\r\n        });\r\n      });\r\n    },\r\n    //参数删除\r\n    Delete(row) {\r\n      this.$confirm(\"此操作将永久删除该参/属性, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n        .then(async () => {\r\n          const res = await this.$http.delete(\r\n            `categories/${row.cat_id}/attributes/${row.attr_id}`\r\n          );\r\n          if (res.meta.status == 200) {\r\n            this.type = \"success\";\r\n            this.message = res.meta.msg;\r\n            const i = this.tableData.findIndex((item) => {\r\n              return item.attr_id === row.attr_id;\r\n            });\r\n            this.tableData.splice(i, 1);\r\n          }\r\n          this.$message({\r\n            type: this.type,\r\n            message: this.message,\r\n          });\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: \"info\",\r\n            message: \"已取消删除\",\r\n          });\r\n        });\r\n    },\r\n    //tag关闭\r\n    handleClose(row, tag) {\r\n      row.attr_vals.splice(row.attr_vals.indexOf(tag), 1);\r\n      this.Vals(row);\r\n    },\r\n    //new tag input /自动获取焦点\r\n    showInput(row) {\r\n      row.inputVisible = true;\r\n      this.$nextTick((_) => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    //更新参数vals\r\n    async Vals(row) {\r\n      const res = await this.$http.put(\r\n        `categories/${row.cat_id}/attributes/${row.attr_id}`,\r\n        {\r\n          attr_name: row.attr_name,\r\n          attr_sel: this.sel,\r\n          attr_vals: row.attr_vals.join(\" \"),\r\n        }\r\n      );\r\n      if (res.meta.status == 200) {\r\n        this.type = \"success\";\r\n        this.message = \"修改参数项成功！\";\r\n      } else {\r\n        this.type = \"success\";\r\n        this.message = \"修改参数项失败！\";\r\n      }\r\n      this.$message({\r\n        type: this.type,\r\n        message: this.message,\r\n      });\r\n    },\r\n    //new tag 与 输入框切换\r\n    async handleInputConfirm(row) {\r\n      let inputValue = row.inputValue;\r\n      if (inputValue.trim().length !== 0) {\r\n        row.attr_vals.push(inputValue.trim());\r\n        this.Vals(row);\r\n      }\r\n      row.inputVisible = false;\r\n      row.inputValue = \"\";\r\n    },\r\n  },\r\n  //计算属性分类id\r\n  computed: {\r\n    cateid() {\r\n      if (this.Goods_cat.length === 3) {\r\n        return this.Goods_cat[2];\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\">\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n.button-new-tag {\r\n  margin-left: 10px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n.input-new-tag {\r\n  width: 150px !important;\r\n  margin-left: 10px;\r\n  vertical-align: bottom;\r\n}\r\n</style>"]}]}